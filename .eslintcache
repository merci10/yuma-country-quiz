[{"/Users/yumakawaguchi/workspace/react-practice/yuma-country-quiz/src/index.tsx":"1","/Users/yumakawaguchi/workspace/react-practice/yuma-country-quiz/src/reportWebVitals.ts":"2","/Users/yumakawaguchi/workspace/react-practice/yuma-country-quiz/src/App.tsx":"3","/Users/yumakawaguchi/workspace/react-practice/yuma-country-quiz/src/CountryQuiz/index.tsx":"4","/Users/yumakawaguchi/workspace/react-practice/yuma-country-quiz/src/CountryQuiz/components/CountriesProvider.tsx":"5"},{"size":659,"mtime":1610981715994,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1610635051745,"results":"8","hashOfConfig":"7"},{"size":556,"mtime":1610635051744,"results":"9","hashOfConfig":"7"},{"size":4113,"mtime":1611159163910,"results":"10","hashOfConfig":"7"},{"size":798,"mtime":1610983739071,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1324ox8",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/yumakawaguchi/workspace/react-practice/yuma-country-quiz/src/index.tsx",[],["24","25"],"/Users/yumakawaguchi/workspace/react-practice/yuma-country-quiz/src/reportWebVitals.ts",[],"/Users/yumakawaguchi/workspace/react-practice/yuma-country-quiz/src/App.tsx",[],"/Users/yumakawaguchi/workspace/react-practice/yuma-country-quiz/src/CountryQuiz/index.tsx",["26","27","28","29"],"import React, { useEffect, useState } from 'react';\r\nimport { useCountriesState } from './components/CountriesProvider';\r\nimport styles from './index.module.css';\r\nimport { Option } from './models/option';\r\n\r\n// 0 ~ (max以下) の整数を返す\r\nconst getRandomNum = (max: number):  number => {\r\n  return Math.floor(Math.random() * max);\r\n}\r\n\r\nexport function CountryQuiz() {\r\n  const countries = useCountriesState();\r\n  const countriesLength = countries.length;\r\n  const optionsNum = 4; // 選択肢のカードの数\r\n\r\n  const [options, setOptions] = useState<Option[]>([]); // 選択肢の国の配列\r\n  const [correctCount, setCorrectCount] = useState(0); // 正解数\r\n  const [correctOptionNum, setCorrectOptionNum] = useState(getRandomNum(optionsNum)); // options配列の何番目を正解にするかの数\r\n  const [phase, setPhase] = useState('answering'); // 解答中or答え合わせor結果\r\n\r\n  const addCorrectCount = () => {\r\n    setCorrectCount(prev => prev + 1);\r\n  }\r\n\r\n  const createOptions = () => {\r\n    for (let i = 0; i < optionsNum; i++) {\r\n      const randNum = getRandomNum(countriesLength);\r\n      const country = countries[randNum];\r\n      setOptions(prev => [...prev, {id: i, ...country, isClicked: false}]);\r\n    }\r\n  }\r\n\r\n  const removeOptions = () => {\r\n    setOptions([]);\r\n  }\r\n\r\n  const setOptionClickedTrue = (id: number) => {\r\n    if (phase === 'checking') return;\r\n\r\n    setOptions(prev => prev.map(option => {\r\n      if (option.id !== id) return option;\r\n      return {...option, isClicked: true};\r\n    }));\r\n  }\r\n\r\n  const changePhase = (phase: string) => {\r\n    setPhase(phase);\r\n  }\r\n\r\n  useEffect(() => {\r\n    // removeOptions();\r\n    createOptions();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (count === 0) return;\r\n  // }, [count]);\r\n\r\n  console.log(options);\r\n\r\n  return (\r\n    <div className={styles.countryQuiz}>\r\n      <div className={styles.countryQuizInner}>\r\n        <p className={styles.countryQuizTitle}>COUNTRY QUIZ</p>\r\n        <div className={styles.countryQuizCard}>\r\n          <p className={styles.countryQuizQuestionTitle}></p>\r\n          {(phase === 'answering' || phase === 'checking') && (\r\n            <div className={`${styles.countryQuizOptions} ${phase === 'checking' ? styles.isChecking : styles.isAnswering}`}>\r\n              {options.map((option, i) => {\r\n                if (correctOptionNum === i) return (\r\n                  <button\r\n                    className={`${styles.countryQuizOption} ${phase === 'checking' ? styles.isCorrectOption : ''}`}\r\n                    key={i}\r\n                    onClick={() => {\r\n                      addCorrectCount();\r\n                      changePhase('checking')\r\n                      setOptionClickedTrue(option.id)\r\n                    }}\r\n                  >\r\n                    {option.name}だよ\r\n                  </button>\r\n                );\r\n                else return (\r\n                  <button\r\n                    className={`${styles.countryQuizOption} ${option.isClicked ? styles.isIncorrectOption : ''}`}\r\n                    key={i}\r\n                    onClick={() => {\r\n                      changePhase('checking');\r\n                      setOptionClickedTrue(option.id);\r\n                    }}\r\n                  >\r\n                    {option.name}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n          {phase === 'checking' && (\r\n            <button\r\n              className={styles.countryQuizNextBtn}\r\n              onClick={() => changePhase('finished')}\r\n            >\r\n              Next\r\n            </button>\r\n          )}\r\n          {phase === 'finished' && (\r\n            <div className={styles.countryQuizResult}>\r\n              <div className={styles.countryQuizResultImg}></div>\r\n              <p className={styles.countryQuizResultTitle}>Result</p>\r\n              <p className={styles.countryQuizResultComment}></p>\r\n              <button className={styles.countryQuizTryAgainBtn}>Try again</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","/Users/yumakawaguchi/workspace/react-practice/yuma-country-quiz/src/CountryQuiz/components/CountriesProvider.tsx",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":17,"column":10,"nodeType":"36","messageId":"37","endLine":17,"endColumn":22},{"ruleId":"34","severity":1,"message":"38","line":18,"column":28,"nodeType":"36","messageId":"37","endLine":18,"endColumn":47},{"ruleId":"34","severity":1,"message":"39","line":33,"column":9,"nodeType":"36","messageId":"37","endLine":33,"endColumn":22},{"ruleId":"40","severity":1,"message":"41","line":53,"column":6,"nodeType":"42","endLine":53,"endColumn":8,"suggestions":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"@typescript-eslint/no-unused-vars","'correctCount' is assigned a value but never used.","Identifier","unusedVar","'setCorrectOptionNum' is assigned a value but never used.","'removeOptions' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'createOptions'. Either include it or remove the dependency array.","ArrayExpression",["46"],"no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},"Update the dependencies array to be: [createOptions]",{"range":"49","text":"50"},[1602,1604],"[createOptions]"]