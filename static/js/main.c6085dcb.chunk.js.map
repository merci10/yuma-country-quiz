{"version":3,"sources":["CountryQuiz/components/OrderedOptions.module.css","CountryQuiz/components/Result.module.css","CountryQuiz/index.module.css","CountryQuiz/components/FlagImg.module.css","CountryQuiz/components/QuizTheme.module.css","CountryQuiz/components/NextBtn.module.css","CountryQuiz/components/CountriesProvider.tsx","CountryQuiz/components/FlagImg.tsx","CountryQuiz/components/QuizTheme.tsx","CountryQuiz/components/OrderedOptions.tsx","CountryQuiz/components/NextBtn.tsx","CountryQuiz/components/Result.tsx","CountryQuiz/index.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","countriesContext","createContext","undefined","CountriesProvider","props","useState","countries","setCountries","useEffect","a","fetch","response","json","data","Provider","value","children","FlagImg","className","styles","flagImgOuter","flagImg","src","flag","alt","width","height","QuizTheme","quizTheme","themeText","OrderedOptions","options","phase","isChecking","isAnswering","map","option","isCorrect","isCorrectOption","onClick","setPhase","setTrueToClickedOption","id","name","isClicked","isIncorrectOption","setSituation","NextBtn","nextBtn","situation","changeOptions","setCorrectCount","prev","changeQuizType","Result","result","resultImg","resultTitle","resultDescription","resultCorrectAnswerCount","correctCount","resultTryAgainBtn","getRandomNum","max","Math","floor","random","CountryQuiz","contries","useContext","Error","useCountriesState","createOptions","correctNum","Array","keys","num","randNum","length","country","getQuizType","quizType","setQuizType","setOptions","correctOptionIndex","findIndex","countryQuiz","countryQuizInner","countryQuizTitle","countryQuizContainer","countryQuizCard","capital","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6085dcb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"OrderedOptions_options__1UmN_\",\"option\":\"OrderedOptions_option__3eWD2\",\"isAnswering\":\"OrderedOptions_isAnswering__34fxd\",\"isChecking\":\"OrderedOptions_isChecking__t2krt\",\"isCorrectOption\":\"OrderedOptions_isCorrectOption__3z0Aj\",\"isIncorrectOption\":\"OrderedOptions_isIncorrectOption__9UNB9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result\":\"Result_result__1beSm\",\"resultImg\":\"Result_resultImg__141bT\",\"resultTitle\":\"Result_resultTitle__QN0K4\",\"resultDescription\":\"Result_resultDescription__3DXO9\",\"resultCorrectAnswerCount\":\"Result_resultCorrectAnswerCount__2zgfS\",\"resultTryAgainBtn\":\"Result_resultTryAgainBtn__2z9cv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"countryQuiz\":\"CountryQuiz_countryQuiz__2gk5g\",\"countryQuizInner\":\"CountryQuiz_countryQuizInner__1BcYL\",\"countryQuizTitle\":\"CountryQuiz_countryQuizTitle__3poaa\",\"countryQuizContainer\":\"CountryQuiz_countryQuizContainer____Tpm\",\"countryQuizCard\":\"CountryQuiz_countryQuizCard__26jsG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flagImgOuter\":\"FlagImg_flagImgOuter__2NgMV\",\"flagImg\":\"FlagImg_flagImg__1i5BB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quizTheme\":\"QuizTheme_quizTheme__3NjHj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nextBtn\":\"NextBtn_nextBtn__3LS3b\"};","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { Country } from \"../models/country\";\n\nconst countriesContext = createContext<Country[] | undefined>(undefined);\n\nexport function CountriesProvider(props: { children: React.ReactNode }) {\n  const [countries, setCountries] = useState<Country[]>();\n\n  useEffect(() => {\n    (async function () {\n      const response = await fetch(\"https://restcountries.eu/rest/v2/all\");\n      const data = await response.json();\n\n      setCountries(data);\n    })();\n  }, []);\n\n  if (!countries) return <p>Loading...</p>;\n\n  return (\n    <countriesContext.Provider value={countries}>\n      {props.children}\n    </countriesContext.Provider>\n  );\n}\n\nexport function useCountriesState() {\n  const contries = useContext(countriesContext);\n\n  if (contries === undefined) {\n    throw new Error(\"CountriesProviderで括ってください。\");\n  }\n\n  return contries;\n}\n","import React from \"react\";\nimport styles from \"./FlagImg.module.css\";\n\ntype FlagImgProps = {\n  flag: string;\n};\n\nfunction FlagImg(props: FlagImgProps) {\n  return (\n    <div className={styles.flagImgOuter}>\n      <img\n        className={styles.flagImg}\n        src={props.flag}\n        alt=\"A flag\"\n        width=\"84px\"\n        height=\"auto\"\n      />\n    </div>\n  );\n}\n\nexport default FlagImg;\n","import React from \"react\";\nimport styles from \"./QuizTheme.module.css\";\n\ntype QuizThemeProps = {\n  themeText: string | undefined;\n};\n\nfunction QuizTheme(props: QuizThemeProps) {\n  return <p className={styles.quizTheme}>{props.themeText}</p>;\n}\nexport default QuizTheme;\n","import React from \"react\";\nimport styles from \"./OrderedOptions.module.css\";\nimport { Option } from \"../models/option\";\n\ntype OrderedOptionsProps = {\n  options: Option[];\n  phase: string;\n  setPhase: (\n    value: React.SetStateAction<\"answering\" | \"checking\" | \"resulting\">\n  ) => void;\n  setSituation: (value: React.SetStateAction<string>) => void;\n  setTrueToClickedOption: (id: number) => void;\n};\n\nfunction OrderedOptions(props: OrderedOptionsProps) {\n  return (\n    <div\n      className={`${styles.options} ${\n        props.phase === \"checking\" ? styles.isChecking : styles.isAnswering\n      }`}\n    >\n      {props.options.map((option) =>\n        option.isCorrect ? (\n          <button\n            className={`${styles.option} ${\n              props.phase === \"checking\" ? styles.isCorrectOption : \"\"\n            }`}\n            key={option.id}\n            onClick={() => {\n              props.setPhase(\"checking\");\n              props.setTrueToClickedOption(option.id);\n            }}\n          >\n            {option.name}だよ\n          </button>\n        ) : (\n          <button\n            className={`${styles.option} ${\n              option.isClicked ? styles.isIncorrectOption : \"\"\n            }`}\n            key={option.id}\n            onClick={() => {\n              props.setPhase(\"checking\");\n              props.setSituation(\"gameOver\");\n              props.setTrueToClickedOption(option.id);\n            }}\n          >\n            {option.name}\n          </button>\n        )\n      )}\n    </div>\n  );\n}\n\nexport default OrderedOptions;\n","import React from \"react\";\nimport styles from \"./NextBtn.module.css\";\n\ntype NextBtnProps = {\n  situation: string;\n  setPhase: (\n    value: React.SetStateAction<\"answering\" | \"checking\" | \"resulting\">\n  ) => void;\n  changeOptions: () => void;\n  setCorrectCount: (value: React.SetStateAction<number>) => void;\n  changeQuizType: () => void;\n};\n\nfunction NextBtn(props: NextBtnProps) {\n  return (\n    <button\n      className={styles.nextBtn}\n      onClick={() => {\n        if (props.situation === \"continued\") {\n          props.setPhase(\"answering\");\n          props.changeOptions();\n          props.setCorrectCount((prev) => prev + 1);\n          props.changeQuizType();\n        } else if (props.situation === \"gameOver\") {\n          props.setPhase(\"resulting\");\n        }\n      }}\n    >\n      Next\n    </button>\n  );\n}\n\nexport default NextBtn;\n","import React from \"react\";\nimport styles from \"./Result.module.css\";\n\ntype ResultProps = {\n  correctCount: number;\n  setCorrectCount: (value: React.SetStateAction<number>) => void;\n  setPhase: (\n    value: React.SetStateAction<\"answering\" | \"checking\" | \"resulting\">\n  ) => void;\n  changeOptions: () => void;\n  changeQuizType: () => void;\n  setSituation: (value: React.SetStateAction<string>) => void;\n};\n\nfunction Result(props: ResultProps) {\n  return (\n    <div className={styles.result}>\n      <div className={styles.resultImg}></div>\n      <p className={styles.resultTitle}>Result</p>\n      <p className={styles.resultDescription}>\n        You got{\" \"}\n        <span className={styles.resultCorrectAnswerCount}>\n          {props.correctCount}\n        </span>{\" \"}\n        correct asnwers\n      </p>\n      <button\n        className={styles.resultTryAgainBtn}\n        onClick={() => {\n          props.setPhase(\"answering\");\n          props.changeOptions();\n          props.setCorrectCount(0);\n          props.changeQuizType();\n          props.setSituation(\"continued\");\n        }}\n      >\n        Try again\n      </button>\n    </div>\n  );\n}\n\nexport default Result;\n","import React, { useState } from \"react\";\nimport { useCountriesState } from \"./components/CountriesProvider\";\nimport FlagImg from \"./components/FlagImg\";\nimport QuizTheme from \"./components/QuizTheme\";\nimport OrderedOptions from \"./components/OrderedOptions\";\nimport NextBtn from \"./components/NextBtn\";\nimport Result from \"./components/Result\";\nimport styles from \"./index.module.css\";\nimport { Option } from \"./models/option\";\n\n// 0 ~ (max未満) の整数を返す\nconst getRandomNum = (max: number): number => {\n  return Math.floor(Math.random() * max);\n};\n\nfunction CountryQuiz() {\n  const countries = useCountriesState();\n  const optionsNum = 4; // 選択肢のカードの数\n\n  const createOptions = () => {\n    const correctNum = getRandomNum(optionsNum);\n\n    const newOptions: Option[] = [...Array(optionsNum).keys()].map((num) => {\n      const randNum = getRandomNum(countries.length);\n      const country = countries[randNum];\n\n      return {\n        id: num,\n        ...country,\n        isCorrect: num === correctNum,\n        isClicked: false,\n      };\n    });\n\n    return newOptions;\n  };\n\n  const getQuizType = () => {\n    const random = Math.random();\n    return random < 0.5 ? \"capital\" : \"flag\";\n  };\n\n  const [quizType, setQuizType] = useState<\"capital\" | \"flag\">(getQuizType());\n  const [options, setOptions] = useState<Option[]>(createOptions()); // 選択肢の国の配列\n  const [situation, setSituation] = useState(\"continued\"); //  正解したか不正解したか\n  const [correctCount, setCorrectCount] = useState(0); // 正解数\n  const correctOptionIndex = options.findIndex(option => option.isCorrect); // options配列の何番目を正解にするかの数\n  const [phase, setPhase] = useState<\"answering\" | \"checking\" | \"resulting\">(\n    \"answering\"\n  ); // 解答中or答え合わせor結果\n\n  const changeQuizType = () => setQuizType(getQuizType());\n\n  const changeOptions = () => setOptions(createOptions());\n\n  const getThemeText = () => {\n    if (quizType === \"capital\")\n      return `${options[correctOptionIndex].capital} is the capital of`;\n    else if (quizType === \"flag\")\n      return \"Which country does this flag belong to?\";\n  };\n\n  const setTrueToClickedOption = (id: number) => {\n    if (phase === \"checking\") return;\n\n    setOptions((prev) =>\n      prev.map((option) => {\n        if (option.id !== id) return option;\n        return { ...option, isClicked: true };\n      })\n    );\n  };\n\n  const getFlagSvg = (): string => {\n    return options[correctOptionIndex].flag;\n  };\n\n  return (\n    <div className={styles.countryQuiz}>\n      <div className={styles.countryQuizInner}>\n        <p className={styles.countryQuizTitle}>COUNTRY QUIZ</p>\n        <div className={styles.countryQuizContainer}>\n          {(phase === \"answering\" || phase === \"checking\") && (\n            <div className={styles.countryQuizCard}>\n              {quizType === \"flag\" && <FlagImg flag={getFlagSvg()} />}\n              <QuizTheme themeText={getThemeText()} />\n              <OrderedOptions\n                options={options}\n                phase={phase}\n                setPhase={setPhase}\n                setSituation={setSituation}\n                setTrueToClickedOption={setTrueToClickedOption}\n              />\n              {phase === \"checking\" && (\n                <NextBtn\n                  situation={situation}\n                  setPhase={setPhase}\n                  changeOptions={changeOptions}\n                  setCorrectCount={setCorrectCount}\n                  changeQuizType={changeQuizType}\n                />\n              )}\n            </div>\n          )}\n          {phase === \"resulting\" && (\n            <Result\n              correctCount={correctCount}\n              setCorrectCount={setCorrectCount}\n              setPhase={setPhase}\n              changeOptions={changeOptions}\n              changeQuizType={changeQuizType}\n              setSituation={setSituation}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CountryQuiz;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport CountryQuiz from \"./CountryQuiz\";\nimport { CountriesProvider } from \"./CountryQuiz/components/CountriesProvider\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CountriesProvider>\n      <CountryQuiz />\n    </CountriesProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}